{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh14620\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs38 \cf0 https://github.com/Sravyatirumala/Swiggy-project.git\
\
\
\
pipeline\{\
    agent any\
    tools\{\
        jdk \'91jdk20\'92\
        nodejs 'nodeJS\'92\
    \}\
    environment \{\
        SCANNER_HOME=tool 'sonar-scanner'\
    \}\
    stages \{\
        stage('clean workspace')\{\
            steps\{\
                cleanWs()\
            \}\
        \}\
        stage('Checkout from Git')\{\
            steps\{\
                git 'https://github.com/Sravyatirumala/Swiggy-project.git'\
            \}\
        \}\
        stage("Sonarqube Analysis ")\{\
            steps\{\
                withSonarQubeEnv('sonar-server') \{\
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Swiggy \\\
                    -Dsonar.projectKey=Swiggy '''\
                \}\
            \}\
        \}\
        stage("quality gate")\{\
           steps \{\
                script \{\
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token' \
                \}\
            \} \
        \}\
        stage('Install Dependencies') \{\
            steps \{\
                sh "npm install"\
            \}\
        \}\
        stage('OWASP FS SCAN') \{\
            steps \{\
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'\
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'\
            \}\
        \}\
        stage('TRIVY FS SCAN') \{\
            steps \{\
                sh "trivy fs . > trivyfs.txt"\
            \}\
        \}\
        stage("Docker Build & Push")\{\
            steps\{\
                script\{\
                   withDockerRegistry(credentialsId: \'91Docker-creds', toolName: 'docker')\{   \
                       sh "docker build -t swiggy ."\
                       sh "docker tag swiggy  sravyatirumala/swiggy:latest "\
                       sh "docker push  sravyatirumala/swiggy:latest "\
                    \}\
                \}\
            \}\
        \}\
        stage("TRIVY")\{\
            steps\{\
                sh "trivy image sravyatirumala/swiggy:latest > trivy.txt" \
            \}\
        \}\
        stage('Deploy to container')\{\
            steps\{\
                sh 'docker run -d --name swiggy -p 3000:3000  sravyatirumala/swiggy:latest'\
            \}\
        \}\
    \}\
\}}
{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh14620\viewkind0
\deftab560
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f0\fs26 \cf0 MultiCluster Deployment with gitops \'97 ARGOCD\
\
1. 3 clusters\
2. Install argocd in main cluster\
3. Verify login \
4. Add spoke clusters.\
\
Pre-requisites:\
\
1. Eksctl\
2. Kubectl\
3. Aws Cli\
4. Aws configure\
5. Argocd\
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 Create 3 clusters: in main server and in diff region if we want.\
\
\
\pard\pardeftab560\sa40\partightenfactor0

\f1\b\fs32 \cf0 eksctl create cluster --name hub-cluster --region us-west-1\
eksctl create cluster --name spoke-cluster-1 --region us-west-1\
eksctl create cluster --name spoke-cluster-2 --region us-west-1\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b0\fs26 \cf0 \'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\
\pard\pardeftab560\sa40\partightenfactor0

\f1\b\fs32 \cf0 \
Install argocd in hub-clsute (Masternode)\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b0\fs26 \cf0   kubectl create namespace argocd\
  kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml\\\
\
\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\
To run argocd in insecure mode :  http\
\
     kubectl get cm -n argocd\
\
\
    kubectl edit configmap argocd-cmd-params-cm  -n  argocd \
\
Add these command user  uid.\
\
  uid: fb7d41fd-fccd-418a-abcb-45131ef363d3\
data:\
  server.insecure: "true"\
\
\
Now this change runs http for argocd: instead of https (as https needs ACM and all)\
\
This config map is already mounted  . To check the changes got or not we can check from this command:\
   kubectl describe deployment/argocd-server -n argocd\
\
\
To check weather it is added or not:\
    kubectl edit deployment/argocd-server -n argocd\
\
    /insecure\
\
\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\
\
Now change the type from cluster port mode to node port mode:\
\
   kubectl get svc  -n argocd\
\
   kubectl edit svc argocd-server -n argocd\
\
Look for type : NodePort\
\
\
To check if its changed :\
   kubectl get  svc  argocd-server -n argocd\
\
This will provide IP address and node names.\
\
We can check for ec2 instances. 2 for hub,2 for spike 1 and 2 \
\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\
\
Now go to ec2 instances hub-cluster : Open security ports of both nodes .\
Give NodePort  port number from svc command.\
\
\
Try to open argocd with IP address and nodeport number\
\
184.169.233.29:31735.  ( this will open argocd)\
\
\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\
To get argocd  password:\
\
   kubectl get secrets  -n argocd\
\
We get this : argocd-initial-admin-secret\
\
   kubectl edit secret  argocd-initial-admin-secret -n argocd\
\
We will get the password :  bGVPTW9OaG1WVmtEcjFqdw==\
\
By default it is base64 so we need to decode:\
\
   echo bGVPTW9OaG1WVmtEcjFqdw== | base64 --decode\
   leOMoNhmVVkDr1jw. We get this type \
   \
Login  user name: admin\
\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\
\
Install Argocd CLI.\
\
  curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64\
  sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd\
  rm argocd-linux-amd64\
\
\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\
\
To Add the  two spoke clusters to hub-server.\
\
Argocd cluster add  we need to choose context.\
 \
\
 kubectl config get-contexts. | grep us-east-1.  (We cans see available clusters)\
  \
\
Add Clusters:\
\
 argocd  cluster add Kuttyraj@spoke-cluster-1.us-west-1.eksctl.io \'97server  184.169.233.29:31735 \
\
\
Note this will throw an  error as we did not login from cli.\
\
To login argocd from cli:\
\
  argocd login 184.169.233.29:31735      in cli\
\
   Username : admin\
   password: we got from base64.\
\
\
Now:  Add both clusters.\
\
 argocd cluster add Kuttyraj@spoke-cluster-1.us-west-1.eksctl.io --server 184.169.233.29:31735\
\
\
 argocd cluster add Kuttyraj@spoke-cluster-2.us-west-1.eksctl.io  --server  184.169.233.29:31735\
\
To check if its added:\
\
Argocd \'97 settings \'97 clusters. ( All 3 clusters will be seen )\
\
\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\
\
Now to deploy manifests files go to GitHub.\
\
This is the repo :\
\
https://github.com/Sravyatirumala/multi-clusters-argocd-deploy/tree/main/manifests/guest-book\
\
Add application and give details.\
\
Add clusters and check if its synced. Add both separately.\
\
\
  kubectl config use-context Kuttyraj@spoke-cluster-1.us-west-1.eksctl.io \
\
   kubectl get all.\
\
Now edit anything in git : configmap\'85 User-properties name\
\
   kubectl edit configmap (we can see the changes made here)\
\
\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\'85\
\
\pard\pardeftab560\sa40\partightenfactor0

\f1\b\fs32 \cf0 eksctl delete cluster --name hub-cluster --region us-west-1\
eksctl delete cluster --name spoke-cluster-1 --region us-west-1\
eksctl delete cluster --name spoke-cluster-2 --region us-west-1\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f0\b0\fs26 \cf0 \
\
}